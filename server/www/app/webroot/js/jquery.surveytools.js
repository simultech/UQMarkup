// Generated by CoffeeScript 1.3.3

/*
Survey Tools plugin.
Author: Justin Marrington

Provides some basic tools for asynchronous survey question posting, and hiding/showing
of sections in a survey.
*/


(function() {
  var $, methods, settings;

  $ = jQuery;

  settings = {
    postbackUrl: '/_dev/surveys/savesurvey',
    yesSubquestionClass: 'yes',
    noSubquestionClass: 'no',
    questionClass: 'surveyquestion',
    submitSelector: 'input[type="submit"]'
  };

  methods = {
    init: function(options) {
      return this.each(function() {
        settings = $.extend(settings, options);
        return $(this).find('');
      });
    },
    destroy: function() {
      return this.each(function() {
        return $(window).off('.surveytools');
      });
    },
    conditionalSections: function() {
      var container, element, elements, group, no_container, no_response, parent_question, questionGroups, yes_container, yes_response, _i, _len;
      questionGroups = {};
      $("." + settings.questionClass).each(function() {
        var group, parentClass, yes_selector;
        if ($(this).is("." + settings.yesSubquestionClass + ", ." + settings.noSubquestionClass)) {
          parentClass = $(this).data('parent_id');
          if (parentClass in questionGroups) {
            group = questionGroups[parentClass];
            group.push($(this));
          } else {
            questionGroups[parentClass] = [$(this)];
          }
          return $(this).remove();
        } else {
          yes_selector = $(this).find('input.yes_selector');
          $(this).find('input.yes_selector').on('change', {
            'selectedYes': true
          }, methods.toggleSection);
          return $(this).find('input.no_selector').on('change', {
            'selectedYes': false
          }, methods.toggleSection);
        }
      });
      for (group in questionGroups) {
        elements = questionGroups[group];
        container = $("<div class='subquestions' data-parent_id='" + group + "' />");
        yes_container = $('<div class="yes_subquestions" />');
        no_container = $('<div class="no_subquestions" />');
        parent_question = $('#question_' + group);
        parent_question.after(container);
        container.append(yes_container);
        container.append(no_container);
        yes_response = parent_question.find('input.yes_selector');
        no_response = parent_question.find('input.no_selector');
        if (!yes_response.attr('checked')) {
          yes_container.hide();
        }
        if (!no_response.attr('checked')) {
          no_container.hide();
        }
        for (_i = 0, _len = elements.length; _i < _len; _i++) {
          element = elements[_i];
          if (element.hasClass(settings.yesSubquestionClass)) {
            yes_container.append(element);
          } else {
            no_container.append(element);
          }
        }
      }
      return $(this);
    },
    toggleSection: function(event) {
      var el, no_el, parent, showYes, yes_el;
      showYes = event.data.selectedYes;
      parent = $("#question_" + $(this).data('parent_id'));
      if (showYes) {
        el = parent.next(".subquestions").children('.yes_subquestions:hidden');
        no_el = parent.next(".subquestions").children('.no_subquestions').not(":hidden");
        no_el.slideUp('fast');
        return el.slideDown('fast');
      } else {
        el = parent.next(".subquestions").children('.no_subquestions:hidden');
        yes_el = parent.next(".subquestions").children('.yes_subquestions').not(":hidden");
        el.slideDown('fast');
        return yes_el.slideUp('fast');
      }
    },
    saveSurvey: function() {
      return this.each(function() {
        var result_label;
        result_label = $('span#submit_result');
        return $(this).on('submit', function(event) {
          var formdata, project_id, survey_name;
          event.preventDefault();
          formdata = $(this).serialize();
          survey_name = $(this).data('survey_name');
          project_id = $(this).data('project_id');
          return $.post("" + settings.postbackUrl + "/" + survey_name + "/" + project_id, formdata, function(response) {
            if (response === "1") {
              result_label.text("Saved successfully");
              result_label.attr("class", "");
              result_label.addClass("success");
            } else {
              result_label.prepend("Couldn't save your responses");
              result_label.attr("class", "");
              result_label.addClass("failure");
            }
            return result_label.fadeIn("fast", function() {
              return result_label.delay(3000).fadeOut("slow");
            });
          });
        });
      });
    }
  };

  $.fn.surveytools = function(method) {
    if (methods[method]) {
      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
    } else if (typeof method === 'object' || !method) {
      return methods.init.apply(this, arguments);
    } else {
      return $.error("Method " + method + " does not exist on plugin surveytools.");
    }
  };

}).call(this);
